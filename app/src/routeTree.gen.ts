/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'
import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as NavigationLayoutRouteRouteImport } from './routes/_navigationLayout/route'
import { Route as NavigationLayoutIndexRouteImport } from './routes/_navigationLayout/index'
import { Route as NavigationLayoutCatalogueRouteImport } from './routes/_navigationLayout/catalogue'
import { Route as NavigationLayoutAuthRouteRouteImport } from './routes/_navigationLayout/auth/route'
import { Route as NavigationLayoutProtectedLayoutRouteRouteImport } from './routes/_navigationLayout/_protectedLayout/route'
import { Route as NavigationLayoutAuthRegisterRouteImport } from './routes/_navigationLayout/auth/register'
import { Route as NavigationLayoutAuthLoginRouteImport } from './routes/_navigationLayout/auth/login'
import { Route as NavigationLayoutProtectedLayoutBookmarksIndexRouteImport } from './routes/_navigationLayout/_protectedLayout/bookmarks/index'
import { Route as NavigationLayoutProtectedLayoutAdminAddAVolumeRouteImport } from './routes/_navigationLayout/_protectedLayout/admin/add-a-volume'
import { Route as NavigationLayoutProtectedLayoutAdminAddASerieRouteImport } from './routes/_navigationLayout/_protectedLayout/admin/add-a-serie'
import { Route as NavigationLayoutProtectedLayoutAdminAddAChapterRouteImport } from './routes/_navigationLayout/_protectedLayout/admin/add-a-chapter'
import { Route as SerieSlugChapterChapterNumberPageRouteImport } from './routes/$serieSlug.chapter.$chapterNumber.$page'
import { Route as NavigationLayoutProtectedLayoutSerieSlugLayoutRouteRouteImport } from './routes/_navigationLayout/_protectedLayout/$serieSlug/_layout/route'
import { Route as NavigationLayoutProtectedLayoutSerieSlugLayoutVolumesRouteImport } from './routes/_navigationLayout/_protectedLayout/$serieSlug/_layout/volumes'
import { Route as NavigationLayoutProtectedLayoutSerieSlugLayoutFicheRouteImport } from './routes/_navigationLayout/_protectedLayout/$serieSlug/_layout/fiche'
import { ServerRoute as ApiTrpcSplatServerRouteImport } from './routes/api/trpc.$'

const NavigationLayoutProtectedLayoutSerieSlugRouteImport = createFileRoute(
  '/_navigationLayout/_protectedLayout/$serieSlug',
)()
const rootServerRouteImport = createServerRootRoute()

const NavigationLayoutRouteRoute = NavigationLayoutRouteRouteImport.update({
  id: '/_navigationLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const NavigationLayoutIndexRoute = NavigationLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => NavigationLayoutRouteRoute,
} as any)
const NavigationLayoutCatalogueRoute =
  NavigationLayoutCatalogueRouteImport.update({
    id: '/catalogue',
    path: '/catalogue',
    getParentRoute: () => NavigationLayoutRouteRoute,
  } as any)
const NavigationLayoutAuthRouteRoute =
  NavigationLayoutAuthRouteRouteImport.update({
    id: '/auth',
    path: '/auth',
    getParentRoute: () => NavigationLayoutRouteRoute,
  } as any)
const NavigationLayoutProtectedLayoutRouteRoute =
  NavigationLayoutProtectedLayoutRouteRouteImport.update({
    id: '/_protectedLayout',
    getParentRoute: () => NavigationLayoutRouteRoute,
  } as any)
const NavigationLayoutProtectedLayoutSerieSlugRoute =
  NavigationLayoutProtectedLayoutSerieSlugRouteImport.update({
    id: '/$serieSlug',
    path: '/$serieSlug',
    getParentRoute: () => NavigationLayoutProtectedLayoutRouteRoute,
  } as any)
const NavigationLayoutAuthRegisterRoute =
  NavigationLayoutAuthRegisterRouteImport.update({
    id: '/register',
    path: '/register',
    getParentRoute: () => NavigationLayoutAuthRouteRoute,
  } as any)
const NavigationLayoutAuthLoginRoute =
  NavigationLayoutAuthLoginRouteImport.update({
    id: '/login',
    path: '/login',
    getParentRoute: () => NavigationLayoutAuthRouteRoute,
  } as any)
const NavigationLayoutProtectedLayoutBookmarksIndexRoute =
  NavigationLayoutProtectedLayoutBookmarksIndexRouteImport.update({
    id: '/bookmarks/',
    path: '/bookmarks/',
    getParentRoute: () => NavigationLayoutProtectedLayoutRouteRoute,
  } as any)
const NavigationLayoutProtectedLayoutAdminAddAVolumeRoute =
  NavigationLayoutProtectedLayoutAdminAddAVolumeRouteImport.update({
    id: '/admin/add-a-volume',
    path: '/admin/add-a-volume',
    getParentRoute: () => NavigationLayoutProtectedLayoutRouteRoute,
  } as any)
const NavigationLayoutProtectedLayoutAdminAddASerieRoute =
  NavigationLayoutProtectedLayoutAdminAddASerieRouteImport.update({
    id: '/admin/add-a-serie',
    path: '/admin/add-a-serie',
    getParentRoute: () => NavigationLayoutProtectedLayoutRouteRoute,
  } as any)
const NavigationLayoutProtectedLayoutAdminAddAChapterRoute =
  NavigationLayoutProtectedLayoutAdminAddAChapterRouteImport.update({
    id: '/admin/add-a-chapter',
    path: '/admin/add-a-chapter',
    getParentRoute: () => NavigationLayoutProtectedLayoutRouteRoute,
  } as any)
const SerieSlugChapterChapterNumberPageRoute =
  SerieSlugChapterChapterNumberPageRouteImport.update({
    id: '/$serieSlug/chapter/$chapterNumber/$page',
    path: '/$serieSlug/chapter/$chapterNumber/$page',
    getParentRoute: () => rootRouteImport,
  } as any)
const NavigationLayoutProtectedLayoutSerieSlugLayoutRouteRoute =
  NavigationLayoutProtectedLayoutSerieSlugLayoutRouteRouteImport.update({
    id: '/_layout',
    getParentRoute: () => NavigationLayoutProtectedLayoutSerieSlugRoute,
  } as any)
const NavigationLayoutProtectedLayoutSerieSlugLayoutVolumesRoute =
  NavigationLayoutProtectedLayoutSerieSlugLayoutVolumesRouteImport.update({
    id: '/volumes',
    path: '/volumes',
    getParentRoute: () =>
      NavigationLayoutProtectedLayoutSerieSlugLayoutRouteRoute,
  } as any)
const NavigationLayoutProtectedLayoutSerieSlugLayoutFicheRoute =
  NavigationLayoutProtectedLayoutSerieSlugLayoutFicheRouteImport.update({
    id: '/fiche',
    path: '/fiche',
    getParentRoute: () =>
      NavigationLayoutProtectedLayoutSerieSlugLayoutRouteRoute,
  } as any)
const ApiTrpcSplatServerRoute = ApiTrpcSplatServerRouteImport.update({
  id: '/api/trpc/$',
  path: '/api/trpc/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/auth': typeof NavigationLayoutAuthRouteRouteWithChildren
  '/catalogue': typeof NavigationLayoutCatalogueRoute
  '/': typeof NavigationLayoutIndexRoute
  '/auth/login': typeof NavigationLayoutAuthLoginRoute
  '/auth/register': typeof NavigationLayoutAuthRegisterRoute
  '/$serieSlug': typeof NavigationLayoutProtectedLayoutSerieSlugLayoutRouteRouteWithChildren
  '/$serieSlug/chapter/$chapterNumber/$page': typeof SerieSlugChapterChapterNumberPageRoute
  '/admin/add-a-chapter': typeof NavigationLayoutProtectedLayoutAdminAddAChapterRoute
  '/admin/add-a-serie': typeof NavigationLayoutProtectedLayoutAdminAddASerieRoute
  '/admin/add-a-volume': typeof NavigationLayoutProtectedLayoutAdminAddAVolumeRoute
  '/bookmarks': typeof NavigationLayoutProtectedLayoutBookmarksIndexRoute
  '/$serieSlug/fiche': typeof NavigationLayoutProtectedLayoutSerieSlugLayoutFicheRoute
  '/$serieSlug/volumes': typeof NavigationLayoutProtectedLayoutSerieSlugLayoutVolumesRoute
}
export interface FileRoutesByTo {
  '/auth': typeof NavigationLayoutAuthRouteRouteWithChildren
  '/catalogue': typeof NavigationLayoutCatalogueRoute
  '/': typeof NavigationLayoutIndexRoute
  '/auth/login': typeof NavigationLayoutAuthLoginRoute
  '/auth/register': typeof NavigationLayoutAuthRegisterRoute
  '/$serieSlug': typeof NavigationLayoutProtectedLayoutSerieSlugLayoutRouteRouteWithChildren
  '/$serieSlug/chapter/$chapterNumber/$page': typeof SerieSlugChapterChapterNumberPageRoute
  '/admin/add-a-chapter': typeof NavigationLayoutProtectedLayoutAdminAddAChapterRoute
  '/admin/add-a-serie': typeof NavigationLayoutProtectedLayoutAdminAddASerieRoute
  '/admin/add-a-volume': typeof NavigationLayoutProtectedLayoutAdminAddAVolumeRoute
  '/bookmarks': typeof NavigationLayoutProtectedLayoutBookmarksIndexRoute
  '/$serieSlug/fiche': typeof NavigationLayoutProtectedLayoutSerieSlugLayoutFicheRoute
  '/$serieSlug/volumes': typeof NavigationLayoutProtectedLayoutSerieSlugLayoutVolumesRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_navigationLayout': typeof NavigationLayoutRouteRouteWithChildren
  '/_navigationLayout/_protectedLayout': typeof NavigationLayoutProtectedLayoutRouteRouteWithChildren
  '/_navigationLayout/auth': typeof NavigationLayoutAuthRouteRouteWithChildren
  '/_navigationLayout/catalogue': typeof NavigationLayoutCatalogueRoute
  '/_navigationLayout/': typeof NavigationLayoutIndexRoute
  '/_navigationLayout/auth/login': typeof NavigationLayoutAuthLoginRoute
  '/_navigationLayout/auth/register': typeof NavigationLayoutAuthRegisterRoute
  '/_navigationLayout/_protectedLayout/$serieSlug': typeof NavigationLayoutProtectedLayoutSerieSlugRouteWithChildren
  '/_navigationLayout/_protectedLayout/$serieSlug/_layout': typeof NavigationLayoutProtectedLayoutSerieSlugLayoutRouteRouteWithChildren
  '/$serieSlug/chapter/$chapterNumber/$page': typeof SerieSlugChapterChapterNumberPageRoute
  '/_navigationLayout/_protectedLayout/admin/add-a-chapter': typeof NavigationLayoutProtectedLayoutAdminAddAChapterRoute
  '/_navigationLayout/_protectedLayout/admin/add-a-serie': typeof NavigationLayoutProtectedLayoutAdminAddASerieRoute
  '/_navigationLayout/_protectedLayout/admin/add-a-volume': typeof NavigationLayoutProtectedLayoutAdminAddAVolumeRoute
  '/_navigationLayout/_protectedLayout/bookmarks/': typeof NavigationLayoutProtectedLayoutBookmarksIndexRoute
  '/_navigationLayout/_protectedLayout/$serieSlug/_layout/fiche': typeof NavigationLayoutProtectedLayoutSerieSlugLayoutFicheRoute
  '/_navigationLayout/_protectedLayout/$serieSlug/_layout/volumes': typeof NavigationLayoutProtectedLayoutSerieSlugLayoutVolumesRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/catalogue'
    | '/'
    | '/auth/login'
    | '/auth/register'
    | '/$serieSlug'
    | '/$serieSlug/chapter/$chapterNumber/$page'
    | '/admin/add-a-chapter'
    | '/admin/add-a-serie'
    | '/admin/add-a-volume'
    | '/bookmarks'
    | '/$serieSlug/fiche'
    | '/$serieSlug/volumes'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/catalogue'
    | '/'
    | '/auth/login'
    | '/auth/register'
    | '/$serieSlug'
    | '/$serieSlug/chapter/$chapterNumber/$page'
    | '/admin/add-a-chapter'
    | '/admin/add-a-serie'
    | '/admin/add-a-volume'
    | '/bookmarks'
    | '/$serieSlug/fiche'
    | '/$serieSlug/volumes'
  id:
    | '__root__'
    | '/_navigationLayout'
    | '/_navigationLayout/_protectedLayout'
    | '/_navigationLayout/auth'
    | '/_navigationLayout/catalogue'
    | '/_navigationLayout/'
    | '/_navigationLayout/auth/login'
    | '/_navigationLayout/auth/register'
    | '/_navigationLayout/_protectedLayout/$serieSlug'
    | '/_navigationLayout/_protectedLayout/$serieSlug/_layout'
    | '/$serieSlug/chapter/$chapterNumber/$page'
    | '/_navigationLayout/_protectedLayout/admin/add-a-chapter'
    | '/_navigationLayout/_protectedLayout/admin/add-a-serie'
    | '/_navigationLayout/_protectedLayout/admin/add-a-volume'
    | '/_navigationLayout/_protectedLayout/bookmarks/'
    | '/_navigationLayout/_protectedLayout/$serieSlug/_layout/fiche'
    | '/_navigationLayout/_protectedLayout/$serieSlug/_layout/volumes'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  NavigationLayoutRouteRoute: typeof NavigationLayoutRouteRouteWithChildren
  SerieSlugChapterChapterNumberPageRoute: typeof SerieSlugChapterChapterNumberPageRoute
}
export interface FileServerRoutesByFullPath {
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/trpc/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/trpc/$'
  id: '__root__' | '/api/trpc/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiTrpcSplatServerRoute: typeof ApiTrpcSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_navigationLayout': {
      id: '/_navigationLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NavigationLayoutRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_navigationLayout/': {
      id: '/_navigationLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof NavigationLayoutIndexRouteImport
      parentRoute: typeof NavigationLayoutRouteRoute
    }
    '/_navigationLayout/catalogue': {
      id: '/_navigationLayout/catalogue'
      path: '/catalogue'
      fullPath: '/catalogue'
      preLoaderRoute: typeof NavigationLayoutCatalogueRouteImport
      parentRoute: typeof NavigationLayoutRouteRoute
    }
    '/_navigationLayout/auth': {
      id: '/_navigationLayout/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof NavigationLayoutAuthRouteRouteImport
      parentRoute: typeof NavigationLayoutRouteRoute
    }
    '/_navigationLayout/_protectedLayout': {
      id: '/_navigationLayout/_protectedLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NavigationLayoutProtectedLayoutRouteRouteImport
      parentRoute: typeof NavigationLayoutRouteRoute
    }
    '/_navigationLayout/_protectedLayout/$serieSlug': {
      id: '/_navigationLayout/_protectedLayout/$serieSlug'
      path: '/$serieSlug'
      fullPath: '/$serieSlug'
      preLoaderRoute: typeof NavigationLayoutProtectedLayoutSerieSlugRouteImport
      parentRoute: typeof NavigationLayoutProtectedLayoutRouteRoute
    }
    '/_navigationLayout/auth/register': {
      id: '/_navigationLayout/auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof NavigationLayoutAuthRegisterRouteImport
      parentRoute: typeof NavigationLayoutAuthRouteRoute
    }
    '/_navigationLayout/auth/login': {
      id: '/_navigationLayout/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof NavigationLayoutAuthLoginRouteImport
      parentRoute: typeof NavigationLayoutAuthRouteRoute
    }
    '/_navigationLayout/_protectedLayout/bookmarks/': {
      id: '/_navigationLayout/_protectedLayout/bookmarks/'
      path: '/bookmarks'
      fullPath: '/bookmarks'
      preLoaderRoute: typeof NavigationLayoutProtectedLayoutBookmarksIndexRouteImport
      parentRoute: typeof NavigationLayoutProtectedLayoutRouteRoute
    }
    '/_navigationLayout/_protectedLayout/admin/add-a-volume': {
      id: '/_navigationLayout/_protectedLayout/admin/add-a-volume'
      path: '/admin/add-a-volume'
      fullPath: '/admin/add-a-volume'
      preLoaderRoute: typeof NavigationLayoutProtectedLayoutAdminAddAVolumeRouteImport
      parentRoute: typeof NavigationLayoutProtectedLayoutRouteRoute
    }
    '/_navigationLayout/_protectedLayout/admin/add-a-serie': {
      id: '/_navigationLayout/_protectedLayout/admin/add-a-serie'
      path: '/admin/add-a-serie'
      fullPath: '/admin/add-a-serie'
      preLoaderRoute: typeof NavigationLayoutProtectedLayoutAdminAddASerieRouteImport
      parentRoute: typeof NavigationLayoutProtectedLayoutRouteRoute
    }
    '/_navigationLayout/_protectedLayout/admin/add-a-chapter': {
      id: '/_navigationLayout/_protectedLayout/admin/add-a-chapter'
      path: '/admin/add-a-chapter'
      fullPath: '/admin/add-a-chapter'
      preLoaderRoute: typeof NavigationLayoutProtectedLayoutAdminAddAChapterRouteImport
      parentRoute: typeof NavigationLayoutProtectedLayoutRouteRoute
    }
    '/$serieSlug/chapter/$chapterNumber/$page': {
      id: '/$serieSlug/chapter/$chapterNumber/$page'
      path: '/$serieSlug/chapter/$chapterNumber/$page'
      fullPath: '/$serieSlug/chapter/$chapterNumber/$page'
      preLoaderRoute: typeof SerieSlugChapterChapterNumberPageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_navigationLayout/_protectedLayout/$serieSlug/_layout': {
      id: '/_navigationLayout/_protectedLayout/$serieSlug/_layout'
      path: '/$serieSlug'
      fullPath: '/$serieSlug'
      preLoaderRoute: typeof NavigationLayoutProtectedLayoutSerieSlugLayoutRouteRouteImport
      parentRoute: typeof NavigationLayoutProtectedLayoutSerieSlugRoute
    }
    '/_navigationLayout/_protectedLayout/$serieSlug/_layout/volumes': {
      id: '/_navigationLayout/_protectedLayout/$serieSlug/_layout/volumes'
      path: '/volumes'
      fullPath: '/$serieSlug/volumes'
      preLoaderRoute: typeof NavigationLayoutProtectedLayoutSerieSlugLayoutVolumesRouteImport
      parentRoute: typeof NavigationLayoutProtectedLayoutSerieSlugLayoutRouteRoute
    }
    '/_navigationLayout/_protectedLayout/$serieSlug/_layout/fiche': {
      id: '/_navigationLayout/_protectedLayout/$serieSlug/_layout/fiche'
      path: '/fiche'
      fullPath: '/$serieSlug/fiche'
      preLoaderRoute: typeof NavigationLayoutProtectedLayoutSerieSlugLayoutFicheRouteImport
      parentRoute: typeof NavigationLayoutProtectedLayoutSerieSlugLayoutRouteRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/trpc/$': {
      id: '/api/trpc/$'
      path: '/api/trpc/$'
      fullPath: '/api/trpc/$'
      preLoaderRoute: typeof ApiTrpcSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface NavigationLayoutProtectedLayoutSerieSlugLayoutRouteRouteChildren {
  NavigationLayoutProtectedLayoutSerieSlugLayoutFicheRoute: typeof NavigationLayoutProtectedLayoutSerieSlugLayoutFicheRoute
  NavigationLayoutProtectedLayoutSerieSlugLayoutVolumesRoute: typeof NavigationLayoutProtectedLayoutSerieSlugLayoutVolumesRoute
}

const NavigationLayoutProtectedLayoutSerieSlugLayoutRouteRouteChildren: NavigationLayoutProtectedLayoutSerieSlugLayoutRouteRouteChildren =
  {
    NavigationLayoutProtectedLayoutSerieSlugLayoutFicheRoute:
      NavigationLayoutProtectedLayoutSerieSlugLayoutFicheRoute,
    NavigationLayoutProtectedLayoutSerieSlugLayoutVolumesRoute:
      NavigationLayoutProtectedLayoutSerieSlugLayoutVolumesRoute,
  }

const NavigationLayoutProtectedLayoutSerieSlugLayoutRouteRouteWithChildren =
  NavigationLayoutProtectedLayoutSerieSlugLayoutRouteRoute._addFileChildren(
    NavigationLayoutProtectedLayoutSerieSlugLayoutRouteRouteChildren,
  )

interface NavigationLayoutProtectedLayoutSerieSlugRouteChildren {
  NavigationLayoutProtectedLayoutSerieSlugLayoutRouteRoute: typeof NavigationLayoutProtectedLayoutSerieSlugLayoutRouteRouteWithChildren
}

const NavigationLayoutProtectedLayoutSerieSlugRouteChildren: NavigationLayoutProtectedLayoutSerieSlugRouteChildren =
  {
    NavigationLayoutProtectedLayoutSerieSlugLayoutRouteRoute:
      NavigationLayoutProtectedLayoutSerieSlugLayoutRouteRouteWithChildren,
  }

const NavigationLayoutProtectedLayoutSerieSlugRouteWithChildren =
  NavigationLayoutProtectedLayoutSerieSlugRoute._addFileChildren(
    NavigationLayoutProtectedLayoutSerieSlugRouteChildren,
  )

interface NavigationLayoutProtectedLayoutRouteRouteChildren {
  NavigationLayoutProtectedLayoutSerieSlugRoute: typeof NavigationLayoutProtectedLayoutSerieSlugRouteWithChildren
  NavigationLayoutProtectedLayoutAdminAddAChapterRoute: typeof NavigationLayoutProtectedLayoutAdminAddAChapterRoute
  NavigationLayoutProtectedLayoutAdminAddASerieRoute: typeof NavigationLayoutProtectedLayoutAdminAddASerieRoute
  NavigationLayoutProtectedLayoutAdminAddAVolumeRoute: typeof NavigationLayoutProtectedLayoutAdminAddAVolumeRoute
  NavigationLayoutProtectedLayoutBookmarksIndexRoute: typeof NavigationLayoutProtectedLayoutBookmarksIndexRoute
}

const NavigationLayoutProtectedLayoutRouteRouteChildren: NavigationLayoutProtectedLayoutRouteRouteChildren =
  {
    NavigationLayoutProtectedLayoutSerieSlugRoute:
      NavigationLayoutProtectedLayoutSerieSlugRouteWithChildren,
    NavigationLayoutProtectedLayoutAdminAddAChapterRoute:
      NavigationLayoutProtectedLayoutAdminAddAChapterRoute,
    NavigationLayoutProtectedLayoutAdminAddASerieRoute:
      NavigationLayoutProtectedLayoutAdminAddASerieRoute,
    NavigationLayoutProtectedLayoutAdminAddAVolumeRoute:
      NavigationLayoutProtectedLayoutAdminAddAVolumeRoute,
    NavigationLayoutProtectedLayoutBookmarksIndexRoute:
      NavigationLayoutProtectedLayoutBookmarksIndexRoute,
  }

const NavigationLayoutProtectedLayoutRouteRouteWithChildren =
  NavigationLayoutProtectedLayoutRouteRoute._addFileChildren(
    NavigationLayoutProtectedLayoutRouteRouteChildren,
  )

interface NavigationLayoutAuthRouteRouteChildren {
  NavigationLayoutAuthLoginRoute: typeof NavigationLayoutAuthLoginRoute
  NavigationLayoutAuthRegisterRoute: typeof NavigationLayoutAuthRegisterRoute
}

const NavigationLayoutAuthRouteRouteChildren: NavigationLayoutAuthRouteRouteChildren =
  {
    NavigationLayoutAuthLoginRoute: NavigationLayoutAuthLoginRoute,
    NavigationLayoutAuthRegisterRoute: NavigationLayoutAuthRegisterRoute,
  }

const NavigationLayoutAuthRouteRouteWithChildren =
  NavigationLayoutAuthRouteRoute._addFileChildren(
    NavigationLayoutAuthRouteRouteChildren,
  )

interface NavigationLayoutRouteRouteChildren {
  NavigationLayoutProtectedLayoutRouteRoute: typeof NavigationLayoutProtectedLayoutRouteRouteWithChildren
  NavigationLayoutAuthRouteRoute: typeof NavigationLayoutAuthRouteRouteWithChildren
  NavigationLayoutCatalogueRoute: typeof NavigationLayoutCatalogueRoute
  NavigationLayoutIndexRoute: typeof NavigationLayoutIndexRoute
}

const NavigationLayoutRouteRouteChildren: NavigationLayoutRouteRouteChildren = {
  NavigationLayoutProtectedLayoutRouteRoute:
    NavigationLayoutProtectedLayoutRouteRouteWithChildren,
  NavigationLayoutAuthRouteRoute: NavigationLayoutAuthRouteRouteWithChildren,
  NavigationLayoutCatalogueRoute: NavigationLayoutCatalogueRoute,
  NavigationLayoutIndexRoute: NavigationLayoutIndexRoute,
}

const NavigationLayoutRouteRouteWithChildren =
  NavigationLayoutRouteRoute._addFileChildren(
    NavigationLayoutRouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  NavigationLayoutRouteRoute: NavigationLayoutRouteRouteWithChildren,
  SerieSlugChapterChapterNumberPageRoute:
    SerieSlugChapterChapterNumberPageRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiTrpcSplatServerRoute: ApiTrpcSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
