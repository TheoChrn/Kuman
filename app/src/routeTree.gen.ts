/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as NavigationLayoutRouteRouteImport } from './routes/_navigationLayout/route'
import { Route as NavigationLayoutIndexRouteImport } from './routes/_navigationLayout/index'
import { Route as NavigationLayoutCatalogueRouteImport } from './routes/_navigationLayout/catalogue'
import { Route as NavigationLayoutAuthRouteRouteImport } from './routes/_navigationLayout/auth/route'
import { Route as NavigationLayoutAuthLayoutRouteRouteImport } from './routes/_navigationLayout/_authLayout/route'
import { Route as ApiTrpcSplatRouteImport } from './routes/api/trpc.$'
import { Route as NavigationLayoutAuthRegisterRouteImport } from './routes/_navigationLayout/auth/register'
import { Route as NavigationLayoutAuthLoginRouteImport } from './routes/_navigationLayout/auth/login'
import { Route as NavigationLayoutAuthLayoutProfileRouteRouteImport } from './routes/_navigationLayout/_authLayout/profile/route'
import { Route as NavigationLayoutSerieSlugLayoutRouteRouteImport } from './routes/_navigationLayout/$serieSlug/_layout/route'
import { Route as NavigationLayoutAuthLayoutProfileIndexRouteImport } from './routes/_navigationLayout/_authLayout/profile/index'
import { Route as NavigationLayoutAuthLayoutBookmarksIndexRouteImport } from './routes/_navigationLayout/_authLayout/bookmarks/index'
import { Route as NavigationLayoutAuthLayoutProfileAccountRouteImport } from './routes/_navigationLayout/_authLayout/profile/account'
import { Route as NavigationLayoutAuthLayoutProfileAbonnementRouteImport } from './routes/_navigationLayout/_authLayout/profile/abonnement'
import { Route as NavigationLayoutSerieSlugLayoutVolumesRouteImport } from './routes/_navigationLayout/$serieSlug/_layout/volumes'
import { Route as NavigationLayoutSerieSlugLayoutFicheRouteImport } from './routes/_navigationLayout/$serieSlug/_layout/fiche'
import { Route as SerieSlugChapterChapterNumberPageRouteImport } from './routes/$serieSlug.chapter.$chapterNumber.$page'
import { Route as NavigationLayoutAuthLayoutAdminSeriesRouteRouteImport } from './routes/_navigationLayout/_authLayout/admin/series/route'
import { Route as NavigationLayoutAuthLayoutProfileAbonnementSuccessRouteImport } from './routes/_navigationLayout/_authLayout/profile/abonnement.success'
import { Route as NavigationLayoutAuthLayoutProfileAbonnementCancelRouteImport } from './routes/_navigationLayout/_authLayout/profile/abonnement.cancel'
import { Route as NavigationLayoutAuthLayoutAdminSeriesAddRouteImport } from './routes/_navigationLayout/_authLayout/admin/series/add'
import { Route as NavigationLayoutAuthLayoutAdminSeriesSlugEditRouteImport } from './routes/_navigationLayout/_authLayout/admin/series/$slug.edit'
import { Route as NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeAddRouteImport } from './routes/_navigationLayout/_authLayout/admin/series/$serieSlug.volume.add'
import { Route as NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeEditRouteImport } from './routes/_navigationLayout/_authLayout/admin/series/$serieSlug.$volume.edit'
import { Route as NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeChapterAddRouteImport } from './routes/_navigationLayout/_authLayout/admin/series/$serieSlug.$volume.chapter.add'
import { Route as NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeChapterEditRouteImport } from './routes/_navigationLayout/_authLayout/admin/series/$serieSlug.$volume.$chapter.edit'

const NavigationLayoutSerieSlugRouteImport = createFileRoute(
  '/_navigationLayout/$serieSlug',
)()

const NavigationLayoutRouteRoute = NavigationLayoutRouteRouteImport.update({
  id: '/_navigationLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const NavigationLayoutSerieSlugRoute =
  NavigationLayoutSerieSlugRouteImport.update({
    id: '/$serieSlug',
    path: '/$serieSlug',
    getParentRoute: () => NavigationLayoutRouteRoute,
  } as any)
const NavigationLayoutIndexRoute = NavigationLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => NavigationLayoutRouteRoute,
} as any)
const NavigationLayoutCatalogueRoute =
  NavigationLayoutCatalogueRouteImport.update({
    id: '/catalogue',
    path: '/catalogue',
    getParentRoute: () => NavigationLayoutRouteRoute,
  } as any)
const NavigationLayoutAuthRouteRoute =
  NavigationLayoutAuthRouteRouteImport.update({
    id: '/auth',
    path: '/auth',
    getParentRoute: () => NavigationLayoutRouteRoute,
  } as any)
const NavigationLayoutAuthLayoutRouteRoute =
  NavigationLayoutAuthLayoutRouteRouteImport.update({
    id: '/_authLayout',
    getParentRoute: () => NavigationLayoutRouteRoute,
  } as any)
const ApiTrpcSplatRoute = ApiTrpcSplatRouteImport.update({
  id: '/api/trpc/$',
  path: '/api/trpc/$',
  getParentRoute: () => rootRouteImport,
} as any)
const NavigationLayoutAuthRegisterRoute =
  NavigationLayoutAuthRegisterRouteImport.update({
    id: '/register',
    path: '/register',
    getParentRoute: () => NavigationLayoutAuthRouteRoute,
  } as any)
const NavigationLayoutAuthLoginRoute =
  NavigationLayoutAuthLoginRouteImport.update({
    id: '/login',
    path: '/login',
    getParentRoute: () => NavigationLayoutAuthRouteRoute,
  } as any)
const NavigationLayoutAuthLayoutProfileRouteRoute =
  NavigationLayoutAuthLayoutProfileRouteRouteImport.update({
    id: '/profile',
    path: '/profile',
    getParentRoute: () => NavigationLayoutAuthLayoutRouteRoute,
  } as any)
const NavigationLayoutSerieSlugLayoutRouteRoute =
  NavigationLayoutSerieSlugLayoutRouteRouteImport.update({
    id: '/_layout',
    getParentRoute: () => NavigationLayoutSerieSlugRoute,
  } as any)
const NavigationLayoutAuthLayoutProfileIndexRoute =
  NavigationLayoutAuthLayoutProfileIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => NavigationLayoutAuthLayoutProfileRouteRoute,
  } as any)
const NavigationLayoutAuthLayoutBookmarksIndexRoute =
  NavigationLayoutAuthLayoutBookmarksIndexRouteImport.update({
    id: '/bookmarks/',
    path: '/bookmarks/',
    getParentRoute: () => NavigationLayoutAuthLayoutRouteRoute,
  } as any)
const NavigationLayoutAuthLayoutProfileAccountRoute =
  NavigationLayoutAuthLayoutProfileAccountRouteImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => NavigationLayoutAuthLayoutProfileRouteRoute,
  } as any)
const NavigationLayoutAuthLayoutProfileAbonnementRoute =
  NavigationLayoutAuthLayoutProfileAbonnementRouteImport.update({
    id: '/abonnement',
    path: '/abonnement',
    getParentRoute: () => NavigationLayoutAuthLayoutProfileRouteRoute,
  } as any)
const NavigationLayoutSerieSlugLayoutVolumesRoute =
  NavigationLayoutSerieSlugLayoutVolumesRouteImport.update({
    id: '/volumes',
    path: '/volumes',
    getParentRoute: () => NavigationLayoutSerieSlugLayoutRouteRoute,
  } as any)
const NavigationLayoutSerieSlugLayoutFicheRoute =
  NavigationLayoutSerieSlugLayoutFicheRouteImport.update({
    id: '/fiche',
    path: '/fiche',
    getParentRoute: () => NavigationLayoutSerieSlugLayoutRouteRoute,
  } as any)
const SerieSlugChapterChapterNumberPageRoute =
  SerieSlugChapterChapterNumberPageRouteImport.update({
    id: '/$serieSlug/chapter/$chapterNumber/$page',
    path: '/$serieSlug/chapter/$chapterNumber/$page',
    getParentRoute: () => rootRouteImport,
  } as any)
const NavigationLayoutAuthLayoutAdminSeriesRouteRoute =
  NavigationLayoutAuthLayoutAdminSeriesRouteRouteImport.update({
    id: '/admin/series',
    path: '/admin/series',
    getParentRoute: () => NavigationLayoutAuthLayoutRouteRoute,
  } as any)
const NavigationLayoutAuthLayoutProfileAbonnementSuccessRoute =
  NavigationLayoutAuthLayoutProfileAbonnementSuccessRouteImport.update({
    id: '/success',
    path: '/success',
    getParentRoute: () => NavigationLayoutAuthLayoutProfileAbonnementRoute,
  } as any)
const NavigationLayoutAuthLayoutProfileAbonnementCancelRoute =
  NavigationLayoutAuthLayoutProfileAbonnementCancelRouteImport.update({
    id: '/cancel',
    path: '/cancel',
    getParentRoute: () => NavigationLayoutAuthLayoutProfileAbonnementRoute,
  } as any)
const NavigationLayoutAuthLayoutAdminSeriesAddRoute =
  NavigationLayoutAuthLayoutAdminSeriesAddRouteImport.update({
    id: '/add',
    path: '/add',
    getParentRoute: () => NavigationLayoutAuthLayoutAdminSeriesRouteRoute,
  } as any)
const NavigationLayoutAuthLayoutAdminSeriesSlugEditRoute =
  NavigationLayoutAuthLayoutAdminSeriesSlugEditRouteImport.update({
    id: '/$slug/edit',
    path: '/$slug/edit',
    getParentRoute: () => NavigationLayoutAuthLayoutAdminSeriesRouteRoute,
  } as any)
const NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeAddRoute =
  NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeAddRouteImport.update({
    id: '/$serieSlug/volume/add',
    path: '/$serieSlug/volume/add',
    getParentRoute: () => NavigationLayoutAuthLayoutAdminSeriesRouteRoute,
  } as any)
const NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeEditRoute =
  NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeEditRouteImport.update({
    id: '/$serieSlug/$volume/edit',
    path: '/$serieSlug/$volume/edit',
    getParentRoute: () => NavigationLayoutAuthLayoutAdminSeriesRouteRoute,
  } as any)
const NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeChapterAddRoute =
  NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeChapterAddRouteImport.update(
    {
      id: '/$serieSlug/$volume/chapter/add',
      path: '/$serieSlug/$volume/chapter/add',
      getParentRoute: () => NavigationLayoutAuthLayoutAdminSeriesRouteRoute,
    } as any,
  )
const NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeChapterEditRoute =
  NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeChapterEditRouteImport.update(
    {
      id: '/$serieSlug/$volume/$chapter/edit',
      path: '/$serieSlug/$volume/$chapter/edit',
      getParentRoute: () => NavigationLayoutAuthLayoutAdminSeriesRouteRoute,
    } as any,
  )

export interface FileRoutesByFullPath {
  '/auth': typeof NavigationLayoutAuthRouteRouteWithChildren
  '/catalogue': typeof NavigationLayoutCatalogueRoute
  '/': typeof NavigationLayoutIndexRoute
  '/$serieSlug': typeof NavigationLayoutSerieSlugLayoutRouteRouteWithChildren
  '/profile': typeof NavigationLayoutAuthLayoutProfileRouteRouteWithChildren
  '/auth/login': typeof NavigationLayoutAuthLoginRoute
  '/auth/register': typeof NavigationLayoutAuthRegisterRoute
  '/api/trpc/$': typeof ApiTrpcSplatRoute
  '/admin/series': typeof NavigationLayoutAuthLayoutAdminSeriesRouteRouteWithChildren
  '/$serieSlug/chapter/$chapterNumber/$page': typeof SerieSlugChapterChapterNumberPageRoute
  '/$serieSlug/fiche': typeof NavigationLayoutSerieSlugLayoutFicheRoute
  '/$serieSlug/volumes': typeof NavigationLayoutSerieSlugLayoutVolumesRoute
  '/profile/abonnement': typeof NavigationLayoutAuthLayoutProfileAbonnementRouteWithChildren
  '/profile/account': typeof NavigationLayoutAuthLayoutProfileAccountRoute
  '/bookmarks': typeof NavigationLayoutAuthLayoutBookmarksIndexRoute
  '/profile/': typeof NavigationLayoutAuthLayoutProfileIndexRoute
  '/admin/series/add': typeof NavigationLayoutAuthLayoutAdminSeriesAddRoute
  '/profile/abonnement/cancel': typeof NavigationLayoutAuthLayoutProfileAbonnementCancelRoute
  '/profile/abonnement/success': typeof NavigationLayoutAuthLayoutProfileAbonnementSuccessRoute
  '/admin/series/$slug/edit': typeof NavigationLayoutAuthLayoutAdminSeriesSlugEditRoute
  '/admin/series/$serieSlug/$volume/edit': typeof NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeEditRoute
  '/admin/series/$serieSlug/volume/add': typeof NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeAddRoute
  '/admin/series/$serieSlug/$volume/$chapter/edit': typeof NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeChapterEditRoute
  '/admin/series/$serieSlug/$volume/chapter/add': typeof NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeChapterAddRoute
}
export interface FileRoutesByTo {
  '/auth': typeof NavigationLayoutAuthRouteRouteWithChildren
  '/catalogue': typeof NavigationLayoutCatalogueRoute
  '/': typeof NavigationLayoutIndexRoute
  '/$serieSlug': typeof NavigationLayoutSerieSlugLayoutRouteRouteWithChildren
  '/auth/login': typeof NavigationLayoutAuthLoginRoute
  '/auth/register': typeof NavigationLayoutAuthRegisterRoute
  '/api/trpc/$': typeof ApiTrpcSplatRoute
  '/admin/series': typeof NavigationLayoutAuthLayoutAdminSeriesRouteRouteWithChildren
  '/$serieSlug/chapter/$chapterNumber/$page': typeof SerieSlugChapterChapterNumberPageRoute
  '/$serieSlug/fiche': typeof NavigationLayoutSerieSlugLayoutFicheRoute
  '/$serieSlug/volumes': typeof NavigationLayoutSerieSlugLayoutVolumesRoute
  '/profile/abonnement': typeof NavigationLayoutAuthLayoutProfileAbonnementRouteWithChildren
  '/profile/account': typeof NavigationLayoutAuthLayoutProfileAccountRoute
  '/bookmarks': typeof NavigationLayoutAuthLayoutBookmarksIndexRoute
  '/profile': typeof NavigationLayoutAuthLayoutProfileIndexRoute
  '/admin/series/add': typeof NavigationLayoutAuthLayoutAdminSeriesAddRoute
  '/profile/abonnement/cancel': typeof NavigationLayoutAuthLayoutProfileAbonnementCancelRoute
  '/profile/abonnement/success': typeof NavigationLayoutAuthLayoutProfileAbonnementSuccessRoute
  '/admin/series/$slug/edit': typeof NavigationLayoutAuthLayoutAdminSeriesSlugEditRoute
  '/admin/series/$serieSlug/$volume/edit': typeof NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeEditRoute
  '/admin/series/$serieSlug/volume/add': typeof NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeAddRoute
  '/admin/series/$serieSlug/$volume/$chapter/edit': typeof NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeChapterEditRoute
  '/admin/series/$serieSlug/$volume/chapter/add': typeof NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeChapterAddRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_navigationLayout': typeof NavigationLayoutRouteRouteWithChildren
  '/_navigationLayout/_authLayout': typeof NavigationLayoutAuthLayoutRouteRouteWithChildren
  '/_navigationLayout/auth': typeof NavigationLayoutAuthRouteRouteWithChildren
  '/_navigationLayout/catalogue': typeof NavigationLayoutCatalogueRoute
  '/_navigationLayout/': typeof NavigationLayoutIndexRoute
  '/_navigationLayout/$serieSlug': typeof NavigationLayoutSerieSlugRouteWithChildren
  '/_navigationLayout/$serieSlug/_layout': typeof NavigationLayoutSerieSlugLayoutRouteRouteWithChildren
  '/_navigationLayout/_authLayout/profile': typeof NavigationLayoutAuthLayoutProfileRouteRouteWithChildren
  '/_navigationLayout/auth/login': typeof NavigationLayoutAuthLoginRoute
  '/_navigationLayout/auth/register': typeof NavigationLayoutAuthRegisterRoute
  '/api/trpc/$': typeof ApiTrpcSplatRoute
  '/_navigationLayout/_authLayout/admin/series': typeof NavigationLayoutAuthLayoutAdminSeriesRouteRouteWithChildren
  '/$serieSlug/chapter/$chapterNumber/$page': typeof SerieSlugChapterChapterNumberPageRoute
  '/_navigationLayout/$serieSlug/_layout/fiche': typeof NavigationLayoutSerieSlugLayoutFicheRoute
  '/_navigationLayout/$serieSlug/_layout/volumes': typeof NavigationLayoutSerieSlugLayoutVolumesRoute
  '/_navigationLayout/_authLayout/profile/abonnement': typeof NavigationLayoutAuthLayoutProfileAbonnementRouteWithChildren
  '/_navigationLayout/_authLayout/profile/account': typeof NavigationLayoutAuthLayoutProfileAccountRoute
  '/_navigationLayout/_authLayout/bookmarks/': typeof NavigationLayoutAuthLayoutBookmarksIndexRoute
  '/_navigationLayout/_authLayout/profile/': typeof NavigationLayoutAuthLayoutProfileIndexRoute
  '/_navigationLayout/_authLayout/admin/series/add': typeof NavigationLayoutAuthLayoutAdminSeriesAddRoute
  '/_navigationLayout/_authLayout/profile/abonnement/cancel': typeof NavigationLayoutAuthLayoutProfileAbonnementCancelRoute
  '/_navigationLayout/_authLayout/profile/abonnement/success': typeof NavigationLayoutAuthLayoutProfileAbonnementSuccessRoute
  '/_navigationLayout/_authLayout/admin/series/$slug/edit': typeof NavigationLayoutAuthLayoutAdminSeriesSlugEditRoute
  '/_navigationLayout/_authLayout/admin/series/$serieSlug/$volume/edit': typeof NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeEditRoute
  '/_navigationLayout/_authLayout/admin/series/$serieSlug/volume/add': typeof NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeAddRoute
  '/_navigationLayout/_authLayout/admin/series/$serieSlug/$volume/$chapter/edit': typeof NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeChapterEditRoute
  '/_navigationLayout/_authLayout/admin/series/$serieSlug/$volume/chapter/add': typeof NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeChapterAddRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/catalogue'
    | '/'
    | '/$serieSlug'
    | '/profile'
    | '/auth/login'
    | '/auth/register'
    | '/api/trpc/$'
    | '/admin/series'
    | '/$serieSlug/chapter/$chapterNumber/$page'
    | '/$serieSlug/fiche'
    | '/$serieSlug/volumes'
    | '/profile/abonnement'
    | '/profile/account'
    | '/bookmarks'
    | '/profile/'
    | '/admin/series/add'
    | '/profile/abonnement/cancel'
    | '/profile/abonnement/success'
    | '/admin/series/$slug/edit'
    | '/admin/series/$serieSlug/$volume/edit'
    | '/admin/series/$serieSlug/volume/add'
    | '/admin/series/$serieSlug/$volume/$chapter/edit'
    | '/admin/series/$serieSlug/$volume/chapter/add'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/catalogue'
    | '/'
    | '/$serieSlug'
    | '/auth/login'
    | '/auth/register'
    | '/api/trpc/$'
    | '/admin/series'
    | '/$serieSlug/chapter/$chapterNumber/$page'
    | '/$serieSlug/fiche'
    | '/$serieSlug/volumes'
    | '/profile/abonnement'
    | '/profile/account'
    | '/bookmarks'
    | '/profile'
    | '/admin/series/add'
    | '/profile/abonnement/cancel'
    | '/profile/abonnement/success'
    | '/admin/series/$slug/edit'
    | '/admin/series/$serieSlug/$volume/edit'
    | '/admin/series/$serieSlug/volume/add'
    | '/admin/series/$serieSlug/$volume/$chapter/edit'
    | '/admin/series/$serieSlug/$volume/chapter/add'
  id:
    | '__root__'
    | '/_navigationLayout'
    | '/_navigationLayout/_authLayout'
    | '/_navigationLayout/auth'
    | '/_navigationLayout/catalogue'
    | '/_navigationLayout/'
    | '/_navigationLayout/$serieSlug'
    | '/_navigationLayout/$serieSlug/_layout'
    | '/_navigationLayout/_authLayout/profile'
    | '/_navigationLayout/auth/login'
    | '/_navigationLayout/auth/register'
    | '/api/trpc/$'
    | '/_navigationLayout/_authLayout/admin/series'
    | '/$serieSlug/chapter/$chapterNumber/$page'
    | '/_navigationLayout/$serieSlug/_layout/fiche'
    | '/_navigationLayout/$serieSlug/_layout/volumes'
    | '/_navigationLayout/_authLayout/profile/abonnement'
    | '/_navigationLayout/_authLayout/profile/account'
    | '/_navigationLayout/_authLayout/bookmarks/'
    | '/_navigationLayout/_authLayout/profile/'
    | '/_navigationLayout/_authLayout/admin/series/add'
    | '/_navigationLayout/_authLayout/profile/abonnement/cancel'
    | '/_navigationLayout/_authLayout/profile/abonnement/success'
    | '/_navigationLayout/_authLayout/admin/series/$slug/edit'
    | '/_navigationLayout/_authLayout/admin/series/$serieSlug/$volume/edit'
    | '/_navigationLayout/_authLayout/admin/series/$serieSlug/volume/add'
    | '/_navigationLayout/_authLayout/admin/series/$serieSlug/$volume/$chapter/edit'
    | '/_navigationLayout/_authLayout/admin/series/$serieSlug/$volume/chapter/add'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  NavigationLayoutRouteRoute: typeof NavigationLayoutRouteRouteWithChildren
  ApiTrpcSplatRoute: typeof ApiTrpcSplatRoute
  SerieSlugChapterChapterNumberPageRoute: typeof SerieSlugChapterChapterNumberPageRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_navigationLayout': {
      id: '/_navigationLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NavigationLayoutRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_navigationLayout/$serieSlug': {
      id: '/_navigationLayout/$serieSlug'
      path: '/$serieSlug'
      fullPath: '/$serieSlug'
      preLoaderRoute: typeof NavigationLayoutSerieSlugRouteImport
      parentRoute: typeof NavigationLayoutRouteRoute
    }
    '/_navigationLayout/': {
      id: '/_navigationLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof NavigationLayoutIndexRouteImport
      parentRoute: typeof NavigationLayoutRouteRoute
    }
    '/_navigationLayout/catalogue': {
      id: '/_navigationLayout/catalogue'
      path: '/catalogue'
      fullPath: '/catalogue'
      preLoaderRoute: typeof NavigationLayoutCatalogueRouteImport
      parentRoute: typeof NavigationLayoutRouteRoute
    }
    '/_navigationLayout/auth': {
      id: '/_navigationLayout/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof NavigationLayoutAuthRouteRouteImport
      parentRoute: typeof NavigationLayoutRouteRoute
    }
    '/_navigationLayout/_authLayout': {
      id: '/_navigationLayout/_authLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NavigationLayoutAuthLayoutRouteRouteImport
      parentRoute: typeof NavigationLayoutRouteRoute
    }
    '/api/trpc/$': {
      id: '/api/trpc/$'
      path: '/api/trpc/$'
      fullPath: '/api/trpc/$'
      preLoaderRoute: typeof ApiTrpcSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_navigationLayout/auth/register': {
      id: '/_navigationLayout/auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof NavigationLayoutAuthRegisterRouteImport
      parentRoute: typeof NavigationLayoutAuthRouteRoute
    }
    '/_navigationLayout/auth/login': {
      id: '/_navigationLayout/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof NavigationLayoutAuthLoginRouteImport
      parentRoute: typeof NavigationLayoutAuthRouteRoute
    }
    '/_navigationLayout/_authLayout/profile': {
      id: '/_navigationLayout/_authLayout/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutProfileRouteRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutRouteRoute
    }
    '/_navigationLayout/$serieSlug/_layout': {
      id: '/_navigationLayout/$serieSlug/_layout'
      path: '/$serieSlug'
      fullPath: '/$serieSlug'
      preLoaderRoute: typeof NavigationLayoutSerieSlugLayoutRouteRouteImport
      parentRoute: typeof NavigationLayoutSerieSlugRoute
    }
    '/_navigationLayout/_authLayout/profile/': {
      id: '/_navigationLayout/_authLayout/profile/'
      path: '/'
      fullPath: '/profile/'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutProfileIndexRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutProfileRouteRoute
    }
    '/_navigationLayout/_authLayout/bookmarks/': {
      id: '/_navigationLayout/_authLayout/bookmarks/'
      path: '/bookmarks'
      fullPath: '/bookmarks'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutBookmarksIndexRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutRouteRoute
    }
    '/_navigationLayout/_authLayout/profile/account': {
      id: '/_navigationLayout/_authLayout/profile/account'
      path: '/account'
      fullPath: '/profile/account'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutProfileAccountRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutProfileRouteRoute
    }
    '/_navigationLayout/_authLayout/profile/abonnement': {
      id: '/_navigationLayout/_authLayout/profile/abonnement'
      path: '/abonnement'
      fullPath: '/profile/abonnement'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutProfileAbonnementRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutProfileRouteRoute
    }
    '/_navigationLayout/$serieSlug/_layout/volumes': {
      id: '/_navigationLayout/$serieSlug/_layout/volumes'
      path: '/volumes'
      fullPath: '/$serieSlug/volumes'
      preLoaderRoute: typeof NavigationLayoutSerieSlugLayoutVolumesRouteImport
      parentRoute: typeof NavigationLayoutSerieSlugLayoutRouteRoute
    }
    '/_navigationLayout/$serieSlug/_layout/fiche': {
      id: '/_navigationLayout/$serieSlug/_layout/fiche'
      path: '/fiche'
      fullPath: '/$serieSlug/fiche'
      preLoaderRoute: typeof NavigationLayoutSerieSlugLayoutFicheRouteImport
      parentRoute: typeof NavigationLayoutSerieSlugLayoutRouteRoute
    }
    '/$serieSlug/chapter/$chapterNumber/$page': {
      id: '/$serieSlug/chapter/$chapterNumber/$page'
      path: '/$serieSlug/chapter/$chapterNumber/$page'
      fullPath: '/$serieSlug/chapter/$chapterNumber/$page'
      preLoaderRoute: typeof SerieSlugChapterChapterNumberPageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_navigationLayout/_authLayout/admin/series': {
      id: '/_navigationLayout/_authLayout/admin/series'
      path: '/admin/series'
      fullPath: '/admin/series'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutAdminSeriesRouteRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutRouteRoute
    }
    '/_navigationLayout/_authLayout/profile/abonnement/success': {
      id: '/_navigationLayout/_authLayout/profile/abonnement/success'
      path: '/success'
      fullPath: '/profile/abonnement/success'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutProfileAbonnementSuccessRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutProfileAbonnementRoute
    }
    '/_navigationLayout/_authLayout/profile/abonnement/cancel': {
      id: '/_navigationLayout/_authLayout/profile/abonnement/cancel'
      path: '/cancel'
      fullPath: '/profile/abonnement/cancel'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutProfileAbonnementCancelRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutProfileAbonnementRoute
    }
    '/_navigationLayout/_authLayout/admin/series/add': {
      id: '/_navigationLayout/_authLayout/admin/series/add'
      path: '/add'
      fullPath: '/admin/series/add'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutAdminSeriesAddRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutAdminSeriesRouteRoute
    }
    '/_navigationLayout/_authLayout/admin/series/$slug/edit': {
      id: '/_navigationLayout/_authLayout/admin/series/$slug/edit'
      path: '/$slug/edit'
      fullPath: '/admin/series/$slug/edit'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutAdminSeriesSlugEditRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutAdminSeriesRouteRoute
    }
    '/_navigationLayout/_authLayout/admin/series/$serieSlug/volume/add': {
      id: '/_navigationLayout/_authLayout/admin/series/$serieSlug/volume/add'
      path: '/$serieSlug/volume/add'
      fullPath: '/admin/series/$serieSlug/volume/add'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeAddRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutAdminSeriesRouteRoute
    }
    '/_navigationLayout/_authLayout/admin/series/$serieSlug/$volume/edit': {
      id: '/_navigationLayout/_authLayout/admin/series/$serieSlug/$volume/edit'
      path: '/$serieSlug/$volume/edit'
      fullPath: '/admin/series/$serieSlug/$volume/edit'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeEditRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutAdminSeriesRouteRoute
    }
    '/_navigationLayout/_authLayout/admin/series/$serieSlug/$volume/chapter/add': {
      id: '/_navigationLayout/_authLayout/admin/series/$serieSlug/$volume/chapter/add'
      path: '/$serieSlug/$volume/chapter/add'
      fullPath: '/admin/series/$serieSlug/$volume/chapter/add'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeChapterAddRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutAdminSeriesRouteRoute
    }
    '/_navigationLayout/_authLayout/admin/series/$serieSlug/$volume/$chapter/edit': {
      id: '/_navigationLayout/_authLayout/admin/series/$serieSlug/$volume/$chapter/edit'
      path: '/$serieSlug/$volume/$chapter/edit'
      fullPath: '/admin/series/$serieSlug/$volume/$chapter/edit'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeChapterEditRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutAdminSeriesRouteRoute
    }
  }
}

interface NavigationLayoutAuthLayoutProfileAbonnementRouteChildren {
  NavigationLayoutAuthLayoutProfileAbonnementCancelRoute: typeof NavigationLayoutAuthLayoutProfileAbonnementCancelRoute
  NavigationLayoutAuthLayoutProfileAbonnementSuccessRoute: typeof NavigationLayoutAuthLayoutProfileAbonnementSuccessRoute
}

const NavigationLayoutAuthLayoutProfileAbonnementRouteChildren: NavigationLayoutAuthLayoutProfileAbonnementRouteChildren =
  {
    NavigationLayoutAuthLayoutProfileAbonnementCancelRoute:
      NavigationLayoutAuthLayoutProfileAbonnementCancelRoute,
    NavigationLayoutAuthLayoutProfileAbonnementSuccessRoute:
      NavigationLayoutAuthLayoutProfileAbonnementSuccessRoute,
  }

const NavigationLayoutAuthLayoutProfileAbonnementRouteWithChildren =
  NavigationLayoutAuthLayoutProfileAbonnementRoute._addFileChildren(
    NavigationLayoutAuthLayoutProfileAbonnementRouteChildren,
  )

interface NavigationLayoutAuthLayoutProfileRouteRouteChildren {
  NavigationLayoutAuthLayoutProfileAbonnementRoute: typeof NavigationLayoutAuthLayoutProfileAbonnementRouteWithChildren
  NavigationLayoutAuthLayoutProfileAccountRoute: typeof NavigationLayoutAuthLayoutProfileAccountRoute
  NavigationLayoutAuthLayoutProfileIndexRoute: typeof NavigationLayoutAuthLayoutProfileIndexRoute
}

const NavigationLayoutAuthLayoutProfileRouteRouteChildren: NavigationLayoutAuthLayoutProfileRouteRouteChildren =
  {
    NavigationLayoutAuthLayoutProfileAbonnementRoute:
      NavigationLayoutAuthLayoutProfileAbonnementRouteWithChildren,
    NavigationLayoutAuthLayoutProfileAccountRoute:
      NavigationLayoutAuthLayoutProfileAccountRoute,
    NavigationLayoutAuthLayoutProfileIndexRoute:
      NavigationLayoutAuthLayoutProfileIndexRoute,
  }

const NavigationLayoutAuthLayoutProfileRouteRouteWithChildren =
  NavigationLayoutAuthLayoutProfileRouteRoute._addFileChildren(
    NavigationLayoutAuthLayoutProfileRouteRouteChildren,
  )

interface NavigationLayoutAuthLayoutAdminSeriesRouteRouteChildren {
  NavigationLayoutAuthLayoutAdminSeriesAddRoute: typeof NavigationLayoutAuthLayoutAdminSeriesAddRoute
  NavigationLayoutAuthLayoutAdminSeriesSlugEditRoute: typeof NavigationLayoutAuthLayoutAdminSeriesSlugEditRoute
  NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeEditRoute: typeof NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeEditRoute
  NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeAddRoute: typeof NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeAddRoute
  NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeChapterEditRoute: typeof NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeChapterEditRoute
  NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeChapterAddRoute: typeof NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeChapterAddRoute
}

const NavigationLayoutAuthLayoutAdminSeriesRouteRouteChildren: NavigationLayoutAuthLayoutAdminSeriesRouteRouteChildren =
  {
    NavigationLayoutAuthLayoutAdminSeriesAddRoute:
      NavigationLayoutAuthLayoutAdminSeriesAddRoute,
    NavigationLayoutAuthLayoutAdminSeriesSlugEditRoute:
      NavigationLayoutAuthLayoutAdminSeriesSlugEditRoute,
    NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeEditRoute:
      NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeEditRoute,
    NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeAddRoute:
      NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeAddRoute,
    NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeChapterEditRoute:
      NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeChapterEditRoute,
    NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeChapterAddRoute:
      NavigationLayoutAuthLayoutAdminSeriesSerieSlugVolumeChapterAddRoute,
  }

const NavigationLayoutAuthLayoutAdminSeriesRouteRouteWithChildren =
  NavigationLayoutAuthLayoutAdminSeriesRouteRoute._addFileChildren(
    NavigationLayoutAuthLayoutAdminSeriesRouteRouteChildren,
  )

interface NavigationLayoutAuthLayoutRouteRouteChildren {
  NavigationLayoutAuthLayoutProfileRouteRoute: typeof NavigationLayoutAuthLayoutProfileRouteRouteWithChildren
  NavigationLayoutAuthLayoutAdminSeriesRouteRoute: typeof NavigationLayoutAuthLayoutAdminSeriesRouteRouteWithChildren
  NavigationLayoutAuthLayoutBookmarksIndexRoute: typeof NavigationLayoutAuthLayoutBookmarksIndexRoute
}

const NavigationLayoutAuthLayoutRouteRouteChildren: NavigationLayoutAuthLayoutRouteRouteChildren =
  {
    NavigationLayoutAuthLayoutProfileRouteRoute:
      NavigationLayoutAuthLayoutProfileRouteRouteWithChildren,
    NavigationLayoutAuthLayoutAdminSeriesRouteRoute:
      NavigationLayoutAuthLayoutAdminSeriesRouteRouteWithChildren,
    NavigationLayoutAuthLayoutBookmarksIndexRoute:
      NavigationLayoutAuthLayoutBookmarksIndexRoute,
  }

const NavigationLayoutAuthLayoutRouteRouteWithChildren =
  NavigationLayoutAuthLayoutRouteRoute._addFileChildren(
    NavigationLayoutAuthLayoutRouteRouteChildren,
  )

interface NavigationLayoutAuthRouteRouteChildren {
  NavigationLayoutAuthLoginRoute: typeof NavigationLayoutAuthLoginRoute
  NavigationLayoutAuthRegisterRoute: typeof NavigationLayoutAuthRegisterRoute
}

const NavigationLayoutAuthRouteRouteChildren: NavigationLayoutAuthRouteRouteChildren =
  {
    NavigationLayoutAuthLoginRoute: NavigationLayoutAuthLoginRoute,
    NavigationLayoutAuthRegisterRoute: NavigationLayoutAuthRegisterRoute,
  }

const NavigationLayoutAuthRouteRouteWithChildren =
  NavigationLayoutAuthRouteRoute._addFileChildren(
    NavigationLayoutAuthRouteRouteChildren,
  )

interface NavigationLayoutSerieSlugLayoutRouteRouteChildren {
  NavigationLayoutSerieSlugLayoutFicheRoute: typeof NavigationLayoutSerieSlugLayoutFicheRoute
  NavigationLayoutSerieSlugLayoutVolumesRoute: typeof NavigationLayoutSerieSlugLayoutVolumesRoute
}

const NavigationLayoutSerieSlugLayoutRouteRouteChildren: NavigationLayoutSerieSlugLayoutRouteRouteChildren =
  {
    NavigationLayoutSerieSlugLayoutFicheRoute:
      NavigationLayoutSerieSlugLayoutFicheRoute,
    NavigationLayoutSerieSlugLayoutVolumesRoute:
      NavigationLayoutSerieSlugLayoutVolumesRoute,
  }

const NavigationLayoutSerieSlugLayoutRouteRouteWithChildren =
  NavigationLayoutSerieSlugLayoutRouteRoute._addFileChildren(
    NavigationLayoutSerieSlugLayoutRouteRouteChildren,
  )

interface NavigationLayoutSerieSlugRouteChildren {
  NavigationLayoutSerieSlugLayoutRouteRoute: typeof NavigationLayoutSerieSlugLayoutRouteRouteWithChildren
}

const NavigationLayoutSerieSlugRouteChildren: NavigationLayoutSerieSlugRouteChildren =
  {
    NavigationLayoutSerieSlugLayoutRouteRoute:
      NavigationLayoutSerieSlugLayoutRouteRouteWithChildren,
  }

const NavigationLayoutSerieSlugRouteWithChildren =
  NavigationLayoutSerieSlugRoute._addFileChildren(
    NavigationLayoutSerieSlugRouteChildren,
  )

interface NavigationLayoutRouteRouteChildren {
  NavigationLayoutAuthLayoutRouteRoute: typeof NavigationLayoutAuthLayoutRouteRouteWithChildren
  NavigationLayoutAuthRouteRoute: typeof NavigationLayoutAuthRouteRouteWithChildren
  NavigationLayoutCatalogueRoute: typeof NavigationLayoutCatalogueRoute
  NavigationLayoutIndexRoute: typeof NavigationLayoutIndexRoute
  NavigationLayoutSerieSlugRoute: typeof NavigationLayoutSerieSlugRouteWithChildren
}

const NavigationLayoutRouteRouteChildren: NavigationLayoutRouteRouteChildren = {
  NavigationLayoutAuthLayoutRouteRoute:
    NavigationLayoutAuthLayoutRouteRouteWithChildren,
  NavigationLayoutAuthRouteRoute: NavigationLayoutAuthRouteRouteWithChildren,
  NavigationLayoutCatalogueRoute: NavigationLayoutCatalogueRoute,
  NavigationLayoutIndexRoute: NavigationLayoutIndexRoute,
  NavigationLayoutSerieSlugRoute: NavigationLayoutSerieSlugRouteWithChildren,
}

const NavigationLayoutRouteRouteWithChildren =
  NavigationLayoutRouteRoute._addFileChildren(
    NavigationLayoutRouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  NavigationLayoutRouteRoute: NavigationLayoutRouteRouteWithChildren,
  ApiTrpcSplatRoute: ApiTrpcSplatRoute,
  SerieSlugChapterChapterNumberPageRoute:
    SerieSlugChapterChapterNumberPageRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
