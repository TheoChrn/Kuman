/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'
import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as NavigationLayoutRouteRouteImport } from './routes/_navigationLayout/route'
import { Route as NavigationLayoutIndexRouteImport } from './routes/_navigationLayout/index'
import { Route as NavigationLayoutCatalogueRouteImport } from './routes/_navigationLayout/catalogue'
import { Route as NavigationLayoutAuthRouteRouteImport } from './routes/_navigationLayout/auth/route'
import { Route as NavigationLayoutAuthLayoutRouteRouteImport } from './routes/_navigationLayout/_authLayout/route'
import { Route as NavigationLayoutAuthRegisterRouteImport } from './routes/_navigationLayout/auth/register'
import { Route as NavigationLayoutAuthLoginRouteImport } from './routes/_navigationLayout/auth/login'
import { Route as NavigationLayoutAuthLayoutAdminRouteRouteImport } from './routes/_navigationLayout/_authLayout/admin/route'
import { Route as NavigationLayoutSerieSlugLayoutRouteRouteImport } from './routes/_navigationLayout/$serieSlug/_layout/route'
import { Route as NavigationLayoutAuthLayoutProfileIndexRouteImport } from './routes/_navigationLayout/_authLayout/profile/index'
import { Route as NavigationLayoutAuthLayoutBookmarksIndexRouteImport } from './routes/_navigationLayout/_authLayout/bookmarks/index'
import { Route as NavigationLayoutAuthLayoutAdminAddAVolumeRouteImport } from './routes/_navigationLayout/_authLayout/admin/add-a-volume'
import { Route as NavigationLayoutAuthLayoutAdminAddASerieRouteImport } from './routes/_navigationLayout/_authLayout/admin/add-a-serie'
import { Route as NavigationLayoutAuthLayoutAdminAddAChapterRouteImport } from './routes/_navigationLayout/_authLayout/admin/add-a-chapter'
import { Route as NavigationLayoutSerieSlugLayoutVolumesRouteImport } from './routes/_navigationLayout/$serieSlug/_layout/volumes'
import { Route as NavigationLayoutSerieSlugLayoutFicheRouteImport } from './routes/_navigationLayout/$serieSlug/_layout/fiche'
import { Route as SerieSlugChapterChapterNumberPageRouteImport } from './routes/$serieSlug.chapter.$chapterNumber.$page'
import { Route as NavigationLayoutAuthLayoutProfileOptionsRouteRouteImport } from './routes/_navigationLayout/_authLayout/profile/options/route'
import { Route as NavigationLayoutAuthLayoutProfileOptionsIndexRouteImport } from './routes/_navigationLayout/_authLayout/profile/options/index'
import { Route as NavigationLayoutAuthLayoutProfileOptionsAbonnementRouteImport } from './routes/_navigationLayout/_authLayout/profile/options/abonnement'
import { Route as NavigationLayoutAuthLayoutProfileOptionsAbonnementSuccessRouteImport } from './routes/_navigationLayout/_authLayout/profile/options/abonnement.success'
import { Route as NavigationLayoutAuthLayoutProfileOptionsAbonnementCancelRouteImport } from './routes/_navigationLayout/_authLayout/profile/options/abonnement.cancel'
import { ServerRoute as ApiTrpcSplatServerRouteImport } from './routes/api/trpc.$'

const NavigationLayoutSerieSlugRouteImport = createFileRoute(
  '/_navigationLayout/$serieSlug',
)()
const rootServerRouteImport = createServerRootRoute()

const NavigationLayoutRouteRoute = NavigationLayoutRouteRouteImport.update({
  id: '/_navigationLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const NavigationLayoutSerieSlugRoute =
  NavigationLayoutSerieSlugRouteImport.update({
    id: '/$serieSlug',
    path: '/$serieSlug',
    getParentRoute: () => NavigationLayoutRouteRoute,
  } as any)
const NavigationLayoutIndexRoute = NavigationLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => NavigationLayoutRouteRoute,
} as any)
const NavigationLayoutCatalogueRoute =
  NavigationLayoutCatalogueRouteImport.update({
    id: '/catalogue',
    path: '/catalogue',
    getParentRoute: () => NavigationLayoutRouteRoute,
  } as any)
const NavigationLayoutAuthRouteRoute =
  NavigationLayoutAuthRouteRouteImport.update({
    id: '/auth',
    path: '/auth',
    getParentRoute: () => NavigationLayoutRouteRoute,
  } as any)
const NavigationLayoutAuthLayoutRouteRoute =
  NavigationLayoutAuthLayoutRouteRouteImport.update({
    id: '/_authLayout',
    getParentRoute: () => NavigationLayoutRouteRoute,
  } as any)
const NavigationLayoutAuthRegisterRoute =
  NavigationLayoutAuthRegisterRouteImport.update({
    id: '/register',
    path: '/register',
    getParentRoute: () => NavigationLayoutAuthRouteRoute,
  } as any)
const NavigationLayoutAuthLoginRoute =
  NavigationLayoutAuthLoginRouteImport.update({
    id: '/login',
    path: '/login',
    getParentRoute: () => NavigationLayoutAuthRouteRoute,
  } as any)
const NavigationLayoutAuthLayoutAdminRouteRoute =
  NavigationLayoutAuthLayoutAdminRouteRouteImport.update({
    id: '/admin',
    path: '/admin',
    getParentRoute: () => NavigationLayoutAuthLayoutRouteRoute,
  } as any)
const NavigationLayoutSerieSlugLayoutRouteRoute =
  NavigationLayoutSerieSlugLayoutRouteRouteImport.update({
    id: '/_layout',
    getParentRoute: () => NavigationLayoutSerieSlugRoute,
  } as any)
const NavigationLayoutAuthLayoutProfileIndexRoute =
  NavigationLayoutAuthLayoutProfileIndexRouteImport.update({
    id: '/profile/',
    path: '/profile/',
    getParentRoute: () => NavigationLayoutAuthLayoutRouteRoute,
  } as any)
const NavigationLayoutAuthLayoutBookmarksIndexRoute =
  NavigationLayoutAuthLayoutBookmarksIndexRouteImport.update({
    id: '/bookmarks/',
    path: '/bookmarks/',
    getParentRoute: () => NavigationLayoutAuthLayoutRouteRoute,
  } as any)
const NavigationLayoutAuthLayoutAdminAddAVolumeRoute =
  NavigationLayoutAuthLayoutAdminAddAVolumeRouteImport.update({
    id: '/add-a-volume',
    path: '/add-a-volume',
    getParentRoute: () => NavigationLayoutAuthLayoutAdminRouteRoute,
  } as any)
const NavigationLayoutAuthLayoutAdminAddASerieRoute =
  NavigationLayoutAuthLayoutAdminAddASerieRouteImport.update({
    id: '/add-a-serie',
    path: '/add-a-serie',
    getParentRoute: () => NavigationLayoutAuthLayoutAdminRouteRoute,
  } as any)
const NavigationLayoutAuthLayoutAdminAddAChapterRoute =
  NavigationLayoutAuthLayoutAdminAddAChapterRouteImport.update({
    id: '/add-a-chapter',
    path: '/add-a-chapter',
    getParentRoute: () => NavigationLayoutAuthLayoutAdminRouteRoute,
  } as any)
const NavigationLayoutSerieSlugLayoutVolumesRoute =
  NavigationLayoutSerieSlugLayoutVolumesRouteImport.update({
    id: '/volumes',
    path: '/volumes',
    getParentRoute: () => NavigationLayoutSerieSlugLayoutRouteRoute,
  } as any)
const NavigationLayoutSerieSlugLayoutFicheRoute =
  NavigationLayoutSerieSlugLayoutFicheRouteImport.update({
    id: '/fiche',
    path: '/fiche',
    getParentRoute: () => NavigationLayoutSerieSlugLayoutRouteRoute,
  } as any)
const SerieSlugChapterChapterNumberPageRoute =
  SerieSlugChapterChapterNumberPageRouteImport.update({
    id: '/$serieSlug/chapter/$chapterNumber/$page',
    path: '/$serieSlug/chapter/$chapterNumber/$page',
    getParentRoute: () => rootRouteImport,
  } as any)
const NavigationLayoutAuthLayoutProfileOptionsRouteRoute =
  NavigationLayoutAuthLayoutProfileOptionsRouteRouteImport.update({
    id: '/profile/options',
    path: '/profile/options',
    getParentRoute: () => NavigationLayoutAuthLayoutRouteRoute,
  } as any)
const NavigationLayoutAuthLayoutProfileOptionsIndexRoute =
  NavigationLayoutAuthLayoutProfileOptionsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => NavigationLayoutAuthLayoutProfileOptionsRouteRoute,
  } as any)
const NavigationLayoutAuthLayoutProfileOptionsAbonnementRoute =
  NavigationLayoutAuthLayoutProfileOptionsAbonnementRouteImport.update({
    id: '/abonnement',
    path: '/abonnement',
    getParentRoute: () => NavigationLayoutAuthLayoutProfileOptionsRouteRoute,
  } as any)
const NavigationLayoutAuthLayoutProfileOptionsAbonnementSuccessRoute =
  NavigationLayoutAuthLayoutProfileOptionsAbonnementSuccessRouteImport.update({
    id: '/success',
    path: '/success',
    getParentRoute: () =>
      NavigationLayoutAuthLayoutProfileOptionsAbonnementRoute,
  } as any)
const NavigationLayoutAuthLayoutProfileOptionsAbonnementCancelRoute =
  NavigationLayoutAuthLayoutProfileOptionsAbonnementCancelRouteImport.update({
    id: '/cancel',
    path: '/cancel',
    getParentRoute: () =>
      NavigationLayoutAuthLayoutProfileOptionsAbonnementRoute,
  } as any)
const ApiTrpcSplatServerRoute = ApiTrpcSplatServerRouteImport.update({
  id: '/api/trpc/$',
  path: '/api/trpc/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/auth': typeof NavigationLayoutAuthRouteRouteWithChildren
  '/catalogue': typeof NavigationLayoutCatalogueRoute
  '/': typeof NavigationLayoutIndexRoute
  '/$serieSlug': typeof NavigationLayoutSerieSlugLayoutRouteRouteWithChildren
  '/admin': typeof NavigationLayoutAuthLayoutAdminRouteRouteWithChildren
  '/auth/login': typeof NavigationLayoutAuthLoginRoute
  '/auth/register': typeof NavigationLayoutAuthRegisterRoute
  '/profile/options': typeof NavigationLayoutAuthLayoutProfileOptionsRouteRouteWithChildren
  '/$serieSlug/chapter/$chapterNumber/$page': typeof SerieSlugChapterChapterNumberPageRoute
  '/$serieSlug/fiche': typeof NavigationLayoutSerieSlugLayoutFicheRoute
  '/$serieSlug/volumes': typeof NavigationLayoutSerieSlugLayoutVolumesRoute
  '/admin/add-a-chapter': typeof NavigationLayoutAuthLayoutAdminAddAChapterRoute
  '/admin/add-a-serie': typeof NavigationLayoutAuthLayoutAdminAddASerieRoute
  '/admin/add-a-volume': typeof NavigationLayoutAuthLayoutAdminAddAVolumeRoute
  '/bookmarks': typeof NavigationLayoutAuthLayoutBookmarksIndexRoute
  '/profile': typeof NavigationLayoutAuthLayoutProfileIndexRoute
  '/profile/options/abonnement': typeof NavigationLayoutAuthLayoutProfileOptionsAbonnementRouteWithChildren
  '/profile/options/': typeof NavigationLayoutAuthLayoutProfileOptionsIndexRoute
  '/profile/options/abonnement/cancel': typeof NavigationLayoutAuthLayoutProfileOptionsAbonnementCancelRoute
  '/profile/options/abonnement/success': typeof NavigationLayoutAuthLayoutProfileOptionsAbonnementSuccessRoute
}
export interface FileRoutesByTo {
  '/auth': typeof NavigationLayoutAuthRouteRouteWithChildren
  '/catalogue': typeof NavigationLayoutCatalogueRoute
  '/': typeof NavigationLayoutIndexRoute
  '/$serieSlug': typeof NavigationLayoutSerieSlugLayoutRouteRouteWithChildren
  '/admin': typeof NavigationLayoutAuthLayoutAdminRouteRouteWithChildren
  '/auth/login': typeof NavigationLayoutAuthLoginRoute
  '/auth/register': typeof NavigationLayoutAuthRegisterRoute
  '/$serieSlug/chapter/$chapterNumber/$page': typeof SerieSlugChapterChapterNumberPageRoute
  '/$serieSlug/fiche': typeof NavigationLayoutSerieSlugLayoutFicheRoute
  '/$serieSlug/volumes': typeof NavigationLayoutSerieSlugLayoutVolumesRoute
  '/admin/add-a-chapter': typeof NavigationLayoutAuthLayoutAdminAddAChapterRoute
  '/admin/add-a-serie': typeof NavigationLayoutAuthLayoutAdminAddASerieRoute
  '/admin/add-a-volume': typeof NavigationLayoutAuthLayoutAdminAddAVolumeRoute
  '/bookmarks': typeof NavigationLayoutAuthLayoutBookmarksIndexRoute
  '/profile': typeof NavigationLayoutAuthLayoutProfileIndexRoute
  '/profile/options/abonnement': typeof NavigationLayoutAuthLayoutProfileOptionsAbonnementRouteWithChildren
  '/profile/options': typeof NavigationLayoutAuthLayoutProfileOptionsIndexRoute
  '/profile/options/abonnement/cancel': typeof NavigationLayoutAuthLayoutProfileOptionsAbonnementCancelRoute
  '/profile/options/abonnement/success': typeof NavigationLayoutAuthLayoutProfileOptionsAbonnementSuccessRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_navigationLayout': typeof NavigationLayoutRouteRouteWithChildren
  '/_navigationLayout/_authLayout': typeof NavigationLayoutAuthLayoutRouteRouteWithChildren
  '/_navigationLayout/auth': typeof NavigationLayoutAuthRouteRouteWithChildren
  '/_navigationLayout/catalogue': typeof NavigationLayoutCatalogueRoute
  '/_navigationLayout/': typeof NavigationLayoutIndexRoute
  '/_navigationLayout/$serieSlug': typeof NavigationLayoutSerieSlugRouteWithChildren
  '/_navigationLayout/$serieSlug/_layout': typeof NavigationLayoutSerieSlugLayoutRouteRouteWithChildren
  '/_navigationLayout/_authLayout/admin': typeof NavigationLayoutAuthLayoutAdminRouteRouteWithChildren
  '/_navigationLayout/auth/login': typeof NavigationLayoutAuthLoginRoute
  '/_navigationLayout/auth/register': typeof NavigationLayoutAuthRegisterRoute
  '/_navigationLayout/_authLayout/profile/options': typeof NavigationLayoutAuthLayoutProfileOptionsRouteRouteWithChildren
  '/$serieSlug/chapter/$chapterNumber/$page': typeof SerieSlugChapterChapterNumberPageRoute
  '/_navigationLayout/$serieSlug/_layout/fiche': typeof NavigationLayoutSerieSlugLayoutFicheRoute
  '/_navigationLayout/$serieSlug/_layout/volumes': typeof NavigationLayoutSerieSlugLayoutVolumesRoute
  '/_navigationLayout/_authLayout/admin/add-a-chapter': typeof NavigationLayoutAuthLayoutAdminAddAChapterRoute
  '/_navigationLayout/_authLayout/admin/add-a-serie': typeof NavigationLayoutAuthLayoutAdminAddASerieRoute
  '/_navigationLayout/_authLayout/admin/add-a-volume': typeof NavigationLayoutAuthLayoutAdminAddAVolumeRoute
  '/_navigationLayout/_authLayout/bookmarks/': typeof NavigationLayoutAuthLayoutBookmarksIndexRoute
  '/_navigationLayout/_authLayout/profile/': typeof NavigationLayoutAuthLayoutProfileIndexRoute
  '/_navigationLayout/_authLayout/profile/options/abonnement': typeof NavigationLayoutAuthLayoutProfileOptionsAbonnementRouteWithChildren
  '/_navigationLayout/_authLayout/profile/options/': typeof NavigationLayoutAuthLayoutProfileOptionsIndexRoute
  '/_navigationLayout/_authLayout/profile/options/abonnement/cancel': typeof NavigationLayoutAuthLayoutProfileOptionsAbonnementCancelRoute
  '/_navigationLayout/_authLayout/profile/options/abonnement/success': typeof NavigationLayoutAuthLayoutProfileOptionsAbonnementSuccessRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/catalogue'
    | '/'
    | '/$serieSlug'
    | '/admin'
    | '/auth/login'
    | '/auth/register'
    | '/profile/options'
    | '/$serieSlug/chapter/$chapterNumber/$page'
    | '/$serieSlug/fiche'
    | '/$serieSlug/volumes'
    | '/admin/add-a-chapter'
    | '/admin/add-a-serie'
    | '/admin/add-a-volume'
    | '/bookmarks'
    | '/profile'
    | '/profile/options/abonnement'
    | '/profile/options/'
    | '/profile/options/abonnement/cancel'
    | '/profile/options/abonnement/success'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/catalogue'
    | '/'
    | '/$serieSlug'
    | '/admin'
    | '/auth/login'
    | '/auth/register'
    | '/$serieSlug/chapter/$chapterNumber/$page'
    | '/$serieSlug/fiche'
    | '/$serieSlug/volumes'
    | '/admin/add-a-chapter'
    | '/admin/add-a-serie'
    | '/admin/add-a-volume'
    | '/bookmarks'
    | '/profile'
    | '/profile/options/abonnement'
    | '/profile/options'
    | '/profile/options/abonnement/cancel'
    | '/profile/options/abonnement/success'
  id:
    | '__root__'
    | '/_navigationLayout'
    | '/_navigationLayout/_authLayout'
    | '/_navigationLayout/auth'
    | '/_navigationLayout/catalogue'
    | '/_navigationLayout/'
    | '/_navigationLayout/$serieSlug'
    | '/_navigationLayout/$serieSlug/_layout'
    | '/_navigationLayout/_authLayout/admin'
    | '/_navigationLayout/auth/login'
    | '/_navigationLayout/auth/register'
    | '/_navigationLayout/_authLayout/profile/options'
    | '/$serieSlug/chapter/$chapterNumber/$page'
    | '/_navigationLayout/$serieSlug/_layout/fiche'
    | '/_navigationLayout/$serieSlug/_layout/volumes'
    | '/_navigationLayout/_authLayout/admin/add-a-chapter'
    | '/_navigationLayout/_authLayout/admin/add-a-serie'
    | '/_navigationLayout/_authLayout/admin/add-a-volume'
    | '/_navigationLayout/_authLayout/bookmarks/'
    | '/_navigationLayout/_authLayout/profile/'
    | '/_navigationLayout/_authLayout/profile/options/abonnement'
    | '/_navigationLayout/_authLayout/profile/options/'
    | '/_navigationLayout/_authLayout/profile/options/abonnement/cancel'
    | '/_navigationLayout/_authLayout/profile/options/abonnement/success'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  NavigationLayoutRouteRoute: typeof NavigationLayoutRouteRouteWithChildren
  SerieSlugChapterChapterNumberPageRoute: typeof SerieSlugChapterChapterNumberPageRoute
}
export interface FileServerRoutesByFullPath {
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/trpc/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/trpc/$'
  id: '__root__' | '/api/trpc/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiTrpcSplatServerRoute: typeof ApiTrpcSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_navigationLayout': {
      id: '/_navigationLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NavigationLayoutRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_navigationLayout/$serieSlug': {
      id: '/_navigationLayout/$serieSlug'
      path: '/$serieSlug'
      fullPath: '/$serieSlug'
      preLoaderRoute: typeof NavigationLayoutSerieSlugRouteImport
      parentRoute: typeof NavigationLayoutRouteRoute
    }
    '/_navigationLayout/': {
      id: '/_navigationLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof NavigationLayoutIndexRouteImport
      parentRoute: typeof NavigationLayoutRouteRoute
    }
    '/_navigationLayout/catalogue': {
      id: '/_navigationLayout/catalogue'
      path: '/catalogue'
      fullPath: '/catalogue'
      preLoaderRoute: typeof NavigationLayoutCatalogueRouteImport
      parentRoute: typeof NavigationLayoutRouteRoute
    }
    '/_navigationLayout/auth': {
      id: '/_navigationLayout/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof NavigationLayoutAuthRouteRouteImport
      parentRoute: typeof NavigationLayoutRouteRoute
    }
    '/_navigationLayout/_authLayout': {
      id: '/_navigationLayout/_authLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NavigationLayoutAuthLayoutRouteRouteImport
      parentRoute: typeof NavigationLayoutRouteRoute
    }
    '/_navigationLayout/auth/register': {
      id: '/_navigationLayout/auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof NavigationLayoutAuthRegisterRouteImport
      parentRoute: typeof NavigationLayoutAuthRouteRoute
    }
    '/_navigationLayout/auth/login': {
      id: '/_navigationLayout/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof NavigationLayoutAuthLoginRouteImport
      parentRoute: typeof NavigationLayoutAuthRouteRoute
    }
    '/_navigationLayout/_authLayout/admin': {
      id: '/_navigationLayout/_authLayout/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutAdminRouteRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutRouteRoute
    }
    '/_navigationLayout/$serieSlug/_layout': {
      id: '/_navigationLayout/$serieSlug/_layout'
      path: '/$serieSlug'
      fullPath: '/$serieSlug'
      preLoaderRoute: typeof NavigationLayoutSerieSlugLayoutRouteRouteImport
      parentRoute: typeof NavigationLayoutSerieSlugRoute
    }
    '/_navigationLayout/_authLayout/profile/': {
      id: '/_navigationLayout/_authLayout/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutProfileIndexRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutRouteRoute
    }
    '/_navigationLayout/_authLayout/bookmarks/': {
      id: '/_navigationLayout/_authLayout/bookmarks/'
      path: '/bookmarks'
      fullPath: '/bookmarks'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutBookmarksIndexRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutRouteRoute
    }
    '/_navigationLayout/_authLayout/admin/add-a-volume': {
      id: '/_navigationLayout/_authLayout/admin/add-a-volume'
      path: '/add-a-volume'
      fullPath: '/admin/add-a-volume'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutAdminAddAVolumeRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutAdminRouteRoute
    }
    '/_navigationLayout/_authLayout/admin/add-a-serie': {
      id: '/_navigationLayout/_authLayout/admin/add-a-serie'
      path: '/add-a-serie'
      fullPath: '/admin/add-a-serie'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutAdminAddASerieRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutAdminRouteRoute
    }
    '/_navigationLayout/_authLayout/admin/add-a-chapter': {
      id: '/_navigationLayout/_authLayout/admin/add-a-chapter'
      path: '/add-a-chapter'
      fullPath: '/admin/add-a-chapter'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutAdminAddAChapterRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutAdminRouteRoute
    }
    '/_navigationLayout/$serieSlug/_layout/volumes': {
      id: '/_navigationLayout/$serieSlug/_layout/volumes'
      path: '/volumes'
      fullPath: '/$serieSlug/volumes'
      preLoaderRoute: typeof NavigationLayoutSerieSlugLayoutVolumesRouteImport
      parentRoute: typeof NavigationLayoutSerieSlugLayoutRouteRoute
    }
    '/_navigationLayout/$serieSlug/_layout/fiche': {
      id: '/_navigationLayout/$serieSlug/_layout/fiche'
      path: '/fiche'
      fullPath: '/$serieSlug/fiche'
      preLoaderRoute: typeof NavigationLayoutSerieSlugLayoutFicheRouteImport
      parentRoute: typeof NavigationLayoutSerieSlugLayoutRouteRoute
    }
    '/$serieSlug/chapter/$chapterNumber/$page': {
      id: '/$serieSlug/chapter/$chapterNumber/$page'
      path: '/$serieSlug/chapter/$chapterNumber/$page'
      fullPath: '/$serieSlug/chapter/$chapterNumber/$page'
      preLoaderRoute: typeof SerieSlugChapterChapterNumberPageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_navigationLayout/_authLayout/profile/options': {
      id: '/_navigationLayout/_authLayout/profile/options'
      path: '/profile/options'
      fullPath: '/profile/options'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutProfileOptionsRouteRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutRouteRoute
    }
    '/_navigationLayout/_authLayout/profile/options/': {
      id: '/_navigationLayout/_authLayout/profile/options/'
      path: '/'
      fullPath: '/profile/options/'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutProfileOptionsIndexRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutProfileOptionsRouteRoute
    }
    '/_navigationLayout/_authLayout/profile/options/abonnement': {
      id: '/_navigationLayout/_authLayout/profile/options/abonnement'
      path: '/abonnement'
      fullPath: '/profile/options/abonnement'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutProfileOptionsAbonnementRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutProfileOptionsRouteRoute
    }
    '/_navigationLayout/_authLayout/profile/options/abonnement/success': {
      id: '/_navigationLayout/_authLayout/profile/options/abonnement/success'
      path: '/success'
      fullPath: '/profile/options/abonnement/success'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutProfileOptionsAbonnementSuccessRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutProfileOptionsAbonnementRoute
    }
    '/_navigationLayout/_authLayout/profile/options/abonnement/cancel': {
      id: '/_navigationLayout/_authLayout/profile/options/abonnement/cancel'
      path: '/cancel'
      fullPath: '/profile/options/abonnement/cancel'
      preLoaderRoute: typeof NavigationLayoutAuthLayoutProfileOptionsAbonnementCancelRouteImport
      parentRoute: typeof NavigationLayoutAuthLayoutProfileOptionsAbonnementRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/trpc/$': {
      id: '/api/trpc/$'
      path: '/api/trpc/$'
      fullPath: '/api/trpc/$'
      preLoaderRoute: typeof ApiTrpcSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface NavigationLayoutAuthLayoutAdminRouteRouteChildren {
  NavigationLayoutAuthLayoutAdminAddAChapterRoute: typeof NavigationLayoutAuthLayoutAdminAddAChapterRoute
  NavigationLayoutAuthLayoutAdminAddASerieRoute: typeof NavigationLayoutAuthLayoutAdminAddASerieRoute
  NavigationLayoutAuthLayoutAdminAddAVolumeRoute: typeof NavigationLayoutAuthLayoutAdminAddAVolumeRoute
}

const NavigationLayoutAuthLayoutAdminRouteRouteChildren: NavigationLayoutAuthLayoutAdminRouteRouteChildren =
  {
    NavigationLayoutAuthLayoutAdminAddAChapterRoute:
      NavigationLayoutAuthLayoutAdminAddAChapterRoute,
    NavigationLayoutAuthLayoutAdminAddASerieRoute:
      NavigationLayoutAuthLayoutAdminAddASerieRoute,
    NavigationLayoutAuthLayoutAdminAddAVolumeRoute:
      NavigationLayoutAuthLayoutAdminAddAVolumeRoute,
  }

const NavigationLayoutAuthLayoutAdminRouteRouteWithChildren =
  NavigationLayoutAuthLayoutAdminRouteRoute._addFileChildren(
    NavigationLayoutAuthLayoutAdminRouteRouteChildren,
  )

interface NavigationLayoutAuthLayoutProfileOptionsAbonnementRouteChildren {
  NavigationLayoutAuthLayoutProfileOptionsAbonnementCancelRoute: typeof NavigationLayoutAuthLayoutProfileOptionsAbonnementCancelRoute
  NavigationLayoutAuthLayoutProfileOptionsAbonnementSuccessRoute: typeof NavigationLayoutAuthLayoutProfileOptionsAbonnementSuccessRoute
}

const NavigationLayoutAuthLayoutProfileOptionsAbonnementRouteChildren: NavigationLayoutAuthLayoutProfileOptionsAbonnementRouteChildren =
  {
    NavigationLayoutAuthLayoutProfileOptionsAbonnementCancelRoute:
      NavigationLayoutAuthLayoutProfileOptionsAbonnementCancelRoute,
    NavigationLayoutAuthLayoutProfileOptionsAbonnementSuccessRoute:
      NavigationLayoutAuthLayoutProfileOptionsAbonnementSuccessRoute,
  }

const NavigationLayoutAuthLayoutProfileOptionsAbonnementRouteWithChildren =
  NavigationLayoutAuthLayoutProfileOptionsAbonnementRoute._addFileChildren(
    NavigationLayoutAuthLayoutProfileOptionsAbonnementRouteChildren,
  )

interface NavigationLayoutAuthLayoutProfileOptionsRouteRouteChildren {
  NavigationLayoutAuthLayoutProfileOptionsAbonnementRoute: typeof NavigationLayoutAuthLayoutProfileOptionsAbonnementRouteWithChildren
  NavigationLayoutAuthLayoutProfileOptionsIndexRoute: typeof NavigationLayoutAuthLayoutProfileOptionsIndexRoute
}

const NavigationLayoutAuthLayoutProfileOptionsRouteRouteChildren: NavigationLayoutAuthLayoutProfileOptionsRouteRouteChildren =
  {
    NavigationLayoutAuthLayoutProfileOptionsAbonnementRoute:
      NavigationLayoutAuthLayoutProfileOptionsAbonnementRouteWithChildren,
    NavigationLayoutAuthLayoutProfileOptionsIndexRoute:
      NavigationLayoutAuthLayoutProfileOptionsIndexRoute,
  }

const NavigationLayoutAuthLayoutProfileOptionsRouteRouteWithChildren =
  NavigationLayoutAuthLayoutProfileOptionsRouteRoute._addFileChildren(
    NavigationLayoutAuthLayoutProfileOptionsRouteRouteChildren,
  )

interface NavigationLayoutAuthLayoutRouteRouteChildren {
  NavigationLayoutAuthLayoutAdminRouteRoute: typeof NavigationLayoutAuthLayoutAdminRouteRouteWithChildren
  NavigationLayoutAuthLayoutProfileOptionsRouteRoute: typeof NavigationLayoutAuthLayoutProfileOptionsRouteRouteWithChildren
  NavigationLayoutAuthLayoutBookmarksIndexRoute: typeof NavigationLayoutAuthLayoutBookmarksIndexRoute
  NavigationLayoutAuthLayoutProfileIndexRoute: typeof NavigationLayoutAuthLayoutProfileIndexRoute
}

const NavigationLayoutAuthLayoutRouteRouteChildren: NavigationLayoutAuthLayoutRouteRouteChildren =
  {
    NavigationLayoutAuthLayoutAdminRouteRoute:
      NavigationLayoutAuthLayoutAdminRouteRouteWithChildren,
    NavigationLayoutAuthLayoutProfileOptionsRouteRoute:
      NavigationLayoutAuthLayoutProfileOptionsRouteRouteWithChildren,
    NavigationLayoutAuthLayoutBookmarksIndexRoute:
      NavigationLayoutAuthLayoutBookmarksIndexRoute,
    NavigationLayoutAuthLayoutProfileIndexRoute:
      NavigationLayoutAuthLayoutProfileIndexRoute,
  }

const NavigationLayoutAuthLayoutRouteRouteWithChildren =
  NavigationLayoutAuthLayoutRouteRoute._addFileChildren(
    NavigationLayoutAuthLayoutRouteRouteChildren,
  )

interface NavigationLayoutAuthRouteRouteChildren {
  NavigationLayoutAuthLoginRoute: typeof NavigationLayoutAuthLoginRoute
  NavigationLayoutAuthRegisterRoute: typeof NavigationLayoutAuthRegisterRoute
}

const NavigationLayoutAuthRouteRouteChildren: NavigationLayoutAuthRouteRouteChildren =
  {
    NavigationLayoutAuthLoginRoute: NavigationLayoutAuthLoginRoute,
    NavigationLayoutAuthRegisterRoute: NavigationLayoutAuthRegisterRoute,
  }

const NavigationLayoutAuthRouteRouteWithChildren =
  NavigationLayoutAuthRouteRoute._addFileChildren(
    NavigationLayoutAuthRouteRouteChildren,
  )

interface NavigationLayoutSerieSlugLayoutRouteRouteChildren {
  NavigationLayoutSerieSlugLayoutFicheRoute: typeof NavigationLayoutSerieSlugLayoutFicheRoute
  NavigationLayoutSerieSlugLayoutVolumesRoute: typeof NavigationLayoutSerieSlugLayoutVolumesRoute
}

const NavigationLayoutSerieSlugLayoutRouteRouteChildren: NavigationLayoutSerieSlugLayoutRouteRouteChildren =
  {
    NavigationLayoutSerieSlugLayoutFicheRoute:
      NavigationLayoutSerieSlugLayoutFicheRoute,
    NavigationLayoutSerieSlugLayoutVolumesRoute:
      NavigationLayoutSerieSlugLayoutVolumesRoute,
  }

const NavigationLayoutSerieSlugLayoutRouteRouteWithChildren =
  NavigationLayoutSerieSlugLayoutRouteRoute._addFileChildren(
    NavigationLayoutSerieSlugLayoutRouteRouteChildren,
  )

interface NavigationLayoutSerieSlugRouteChildren {
  NavigationLayoutSerieSlugLayoutRouteRoute: typeof NavigationLayoutSerieSlugLayoutRouteRouteWithChildren
}

const NavigationLayoutSerieSlugRouteChildren: NavigationLayoutSerieSlugRouteChildren =
  {
    NavigationLayoutSerieSlugLayoutRouteRoute:
      NavigationLayoutSerieSlugLayoutRouteRouteWithChildren,
  }

const NavigationLayoutSerieSlugRouteWithChildren =
  NavigationLayoutSerieSlugRoute._addFileChildren(
    NavigationLayoutSerieSlugRouteChildren,
  )

interface NavigationLayoutRouteRouteChildren {
  NavigationLayoutAuthLayoutRouteRoute: typeof NavigationLayoutAuthLayoutRouteRouteWithChildren
  NavigationLayoutAuthRouteRoute: typeof NavigationLayoutAuthRouteRouteWithChildren
  NavigationLayoutCatalogueRoute: typeof NavigationLayoutCatalogueRoute
  NavigationLayoutIndexRoute: typeof NavigationLayoutIndexRoute
  NavigationLayoutSerieSlugRoute: typeof NavigationLayoutSerieSlugRouteWithChildren
}

const NavigationLayoutRouteRouteChildren: NavigationLayoutRouteRouteChildren = {
  NavigationLayoutAuthLayoutRouteRoute:
    NavigationLayoutAuthLayoutRouteRouteWithChildren,
  NavigationLayoutAuthRouteRoute: NavigationLayoutAuthRouteRouteWithChildren,
  NavigationLayoutCatalogueRoute: NavigationLayoutCatalogueRoute,
  NavigationLayoutIndexRoute: NavigationLayoutIndexRoute,
  NavigationLayoutSerieSlugRoute: NavigationLayoutSerieSlugRouteWithChildren,
}

const NavigationLayoutRouteRouteWithChildren =
  NavigationLayoutRouteRoute._addFileChildren(
    NavigationLayoutRouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  NavigationLayoutRouteRoute: NavigationLayoutRouteRouteWithChildren,
  SerieSlugChapterChapterNumberPageRoute:
    SerieSlugChapterChapterNumberPageRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiTrpcSplatServerRoute: ApiTrpcSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
